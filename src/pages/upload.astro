---
// upload.astro
import Card from '../components/Card.astro'
import Layout from '../layouts/Layout.astro'
import { Image } from 'astro:assets'
import messengerIcon from '../assets/messenger-icon2.svg'
import instagramIcon from '../assets/instagram-icon2.svg'
import whatsappIcon from '../assets/whatsapp-icon2.svg'
---

<Layout title="About | Chat Rewind">
    <main class="main">
        <div class="card-container">
            <Card title="Select your App" className="card">
                <div class="flex justify-center gap-4 mb-6 mt-6">
                    <button class="app-button" id="messenger">
                        <Image
                            src={messengerIcon}
                            alt="Messenger"
                            width={70}
                            height={70}
                        />
                    </button>
                    <button class="app-button" id="instagram">
                        <Image
                            src={instagramIcon}
                            alt="Instagram"
                            width={70}
                            height={70}
                        />
                    </button>
                    <button class="app-button" id="whatsapp">
                        <Image
                            src={whatsappIcon}
                            alt="WhatsApp"
                            width={70}
                            height={70}
                        />
                    </button>
                </div>
                <ol class="instruction-list">
                    <li>Open the chat you want</li>
                    <li>Tap More options &gt; More &gt; Export chat</li>
                    <li>Tap Include media</li>
                    <li>Download your files</li>
                </ol>
            </Card>

            <Card title="Upload Zip File" className="card">
                <div class="flex justify-center gap-4 mb-6">
                    <!-- upload zip -->
                    <button
                        id="file-input-button"
                        class="btn btn-secondary btn-secondary:hover"
                    >
                        Upload!
                    </button>
                    <input
                        type="file"
                        id="file-input"
                        accept="application/zip"
                        hidden
                    />
                </div>
            </Card>
        </div>
        <div class="back-bttn">
            <button class="btn btn-tertiary" id="backBttn">&lt;&lt;</button>
        </div>
    </main>
</Layout>

<script>
    import { unzip } from '../scripts/unzip.ts'
    import { textToJson } from '../scripts/textToJson.ts'

    document.getElementById('backBttn').onclick = () => {
        window.location.href = '/'
    }

    // Implementing a simple app selection and console logging the selected app
    // This should work instead of using a form - state of the selected app is saved and is "circled" in the UI when selected.
    let selectedApp = null
    const appButtons = document.querySelectorAll('.app-button')

    appButtons.forEach((button) => {
        button.addEventListener('click', () => {
            appButtons.forEach((btn) => btn.classList.remove('selected'))
            button.classList.add('selected')
            selectedApp = button.id
            console.log('Selected app:', selectedApp)
        })
    })

    const fileInput = document.getElementById('file-input') as HTMLInputElement
    const fileInputButton = document.getElementById(
        'file-input-button'
    ) as HTMLInputElement
    fileInputButton.onclick = () =>
        fileInput.dispatchEvent(new MouseEvent('click'))
    let selectedFile: File
    fileInput.onchange = selectFile

    async function selectFile() {
        try {
            fileInputButton.disabled = true
            selectedFile = fileInput.files[0]
            const chatblob = await unzip(selectedFile)
            const jsonblob = await textToJson(chatblob)
            const data = await jsonblob.text()
            console.log(data)
            sessionStorage.setItem('message_json', data)

            return (location.href = '/rewind')
        } catch (error) {
            alert(error)
        } finally {
            fileInputButton.disabled = false
            fileInput.value = ''
        }
    }
</script>

<style>
    main {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
        margin-top: 10rem;
        padding: 2rem 1rem;
        font-family: monospace;
        font-size: 1.25rem;
        text-align: center;
    }

    .card-container {
        display: flex;
        flex-direction: column;
        justify-content: center;

        gap: 2rem;
        width: 100vw;
        margin-bottom: 2rem;
    }

    @media (min-width: 768px) {
        .card-container {
            flex-direction: row;
        }
    }

    .back-bttn {
        width: 100%;
        display: flex;
        justify-content: flex-end;
        margin-top: 2rem;
    }

    .btn {
        margin-top: 1.5rem;
        font-size: 1rem;
        font-weight: 600;
        padding: 0.75rem 1.5rem;
        border-radius: 9px;
        transition: all 0.3s ease;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .btn-secondary {
        background-color: #ec4899;
        color: #ffffff;
    }

    .btn-secondary:hover {
        background-color: #a2034b;
    }

    .btn-tertiary {
        background-color: #000000;
        color: #ffffff;
        border: 1px solid #ffffff;
    }

    .btn-tertiary:hover {
        background-color: #ffffff;
        color: #000000;
    }

    .instruction-list {
        text-align: left;
        padding: 1.5rem;
    }

    .app-button {
        background: none;
        border: 2px solid transparent;
        padding: 5px;
        cursor: pointer;
        transition: all 0.2s ease-in-out;
        border-radius: 10px;
    }

    .app-button:hover {
        transform: scale(1.1);
    }

    .app-button.selected {
        border-color: #ffffff;
        background-color: rgba(255, 255, 255, 0.1);
    }
</style>
